JButton

- 제품 불러오기

1. JComboBox 객체가 가지고 있는 모든 데이터 삭제
(상품 콤보박스)

2. ItemDAO 클래스의 getItem() 메소드를 활용하여 상품명 전체 검색하여 Vector에 저장
(Vector 객체 <- 상품명을 저장)

3. Vector에 저장한 상품명을 comboBox에 추가
(Vector -> 상품 콤보박스)


- 추가

1. JComboBox 객체로부터 사용자가 선택한 상품명과 텍스트 필드 입력 수량 저장
(상품 콤보박스, 수량 -> 변수 저장)

2. DB로부터 사용자가 선택한 상품명의 단가 불러오기
(테이블에서 상품명 검색 -> 단가 불러오기)

3. 사용자가 선택한 상품명의 구매가격(단가*수량)과 누적 총액 연산하여 저장
(단가 * 수량 -> 구매가격, 구매가격 합산 -> 누적 총액)

4. 상품명, 구매수량, 구매가격, 누적총액을 Vector에 저장
(Vector 객체에 저장)

5. Vector 객체를 JTable의 Model 객체에 추가
(Vector -> JTable(표), Model(이건 뭐지?))


- 결제

1. JOptionPane.showConfirmDialog() 출력("결제하시겠습니까?")

- “YES”선택 시 “총 금액은 ~ 입니다”출력(아래 함수 활용)
- 사용자로부터 숫자 입력을 위해 JOptionPane.showInputDialog() 호출
- 사용자 입력 금액이 총 금액보다 크면 “지불 금액과 거스름돈 출력” 후
- DB 업데이트(stockUpdate 메소드 정의), JTable과 수량/총 금액 TextField 초기화(clean() 정의)
- 그렇지 않으면 “금액이 적습니다” 문장을 포함한 Dialog 창 출력


- 취소

1. JOptionPane.showConfirmDialog() 출력(“주문을 취소하시겠습니까?”)
- “YES”선택 시 JTable과 수량/총 금액의 JTextField 객체 초기화

2. clean() 메소드 구현
- JTable 객체와 수량/총 금액을 출력하는 JTextField 객체 초기화

3. stockUpdate() 메소드 구현
- JTable 에 출력한 각 행의 상품명, 재고량, 구매수량을 이용하여 DB 업데이트